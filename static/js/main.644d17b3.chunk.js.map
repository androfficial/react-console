{"version":3,"sources":["components/Button.jsx","components/Console.jsx","components/Flex.jsx","components/Line.jsx","components/Title.jsx","App.js","index.js"],"names":["rotateAnimation","keyframes","StyledButton","styled","button","attrs","props","outlined","align","primary","css","color","background","LargeButton","Button","StyledConsole","textarea","theme","colors","media","tablet","phone","Console","React","useState","lines","setLines","direction","margin","map","line","index","onKeyPress","e","charCode","prev","StyledFlex","div","justify","Flex","StyledLine","Line","StyledTitle","h1","Title","AppWrapper","App","Global","createGlobalStyle","ReactDOM","render","secondary","document","getElementById"],"mappings":"mNAGMA,EAAkBC,YAAH,yHASfC,EAAeC,IAAOC,OAAOC,OAAM,SAACC,GAAD,MAAY,CACnDC,UAAU,KADSJ,CAAH,mPAGF,qBAAGK,OAAqB,YASvBR,GAEb,SAACM,GAAD,OACAA,EAAMG,SACNC,YADA,2EAEW,SAACJ,GAAD,OAAWA,EAAMK,OAAS,UACrB,SAACL,GAAD,OAAWA,EAAMM,YAAc,aAE/C,SAACN,GAAD,OACAA,EAAMC,UACNG,YADA,iHAEW,SAACJ,GAAD,OAAWA,EAAMK,OAAS,UACf,SAACL,GAAD,OAAWA,EAAMK,OAAS,aAK9CE,EAAcV,YAAOD,EAAPC,CAAH,gDAQFW,EAJA,SAACR,GACd,OAAO,cAACO,EAAD,eAAiBP,K,wBCzCpBS,EAAgBZ,IAAOa,SAAV,uOAOR,SAACV,GAAD,OAAWA,EAAMK,OAASL,EAAMW,MAAMC,OAAOT,WAI7C,SAACH,GAAD,OAAWA,EAAMW,MAAME,MAAMC,UAE7B,SAACd,GAAD,OAAWA,EAAMW,MAAME,MAAME,SA2BzBC,EAvBC,SAAC,GAAyB,IAAvBX,EAAsB,EAAtBA,MAAUL,EAAY,2BACbiB,IAAMC,SAAS,CAAC,2BADH,mBAChCC,EADgC,KACzBC,EADyB,KASvC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAMC,UAAU,SAASC,OAAO,SAAhC,SACGH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CAAMpB,MAAOA,EAAb,SACGmB,GADsBC,QAK7B,cAAChB,EAAD,aAAeiB,WAfA,SAACC,GACC,KAAfA,EAAEC,UACJR,GAAS,SAACS,GAAD,4BAAcA,GAAd,CAAoB,+BAaUxB,MAAOA,GAAWL,QCrCzD8B,EAAajC,IAAOkC,IAAV,oIAEI,SAAA/B,GAAK,OAAIA,EAAMqB,WAAa,SAC/B,SAAArB,GAAK,OAAIA,EAAME,OAAS,YACpB,SAAAF,GAAK,OAAIA,EAAMgC,SAAW,YACnC,qBAAGV,QAAuB,OASvBW,EANF,SAACjC,GACZ,OACE,cAAC8B,EAAD,eAAgB9B,KCVdkC,EAAarC,IAAOkC,IAAV,+DAEL,SAAC/B,GAAD,OAAWA,EAAMK,OAASL,EAAMW,MAAMC,OAAOT,WAOzCgC,EAJF,SAACnC,GACZ,OAAO,cAACkC,EAAD,eAAgBlC,KCNnBoC,EAAcvC,IAAOwC,GAAV,2CACN,SAACrC,GAAD,OAAWA,EAAMK,OAASL,EAAMW,MAAMC,OAAOT,WAOzCmC,EAJD,SAACtC,GACb,OAAO,cAACoC,EAAD,eAAiBpC,KCHpBuC,EAAa1C,IAAOkC,IAAV,yGAqBDS,EAdH,WACV,OACE,eAACD,EAAD,WACE,cAAC,EAAD,CAAMP,QAAQ,SAAd,SACE,cAAC,EAAD,sDAEF,eAAC,EAAD,CAAMX,UAAU,SAASC,OAAO,SAAhC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQjB,MAAM,QAAQH,MAAM,WAA5B,2ECdFuC,EAASC,YAAH,oIAoBZC,IAASC,OACP,eAAC,IAAD,CAAejC,MAZH,CACZC,OAAQ,CACNT,QAAS,QACT0C,UAAW,OAEbhC,MAAO,CACLC,OAAQ,4CACRC,MAAO,uBAKT,UACE,cAAC0B,EAAD,IACA,cAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.644d17b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst rotateAnimation = keyframes`\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  100% {\r\n    transform: translateY(-5px);\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button.attrs((props) => ({\r\n  outlined: true,\r\n}))`\r\n  align-self: ${({ align }) => align || 'stretch'};\r\n  font-size: 18px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    animation: ${rotateAnimation} 0.7s infinite alternate;\r\n  }\r\n  ${(props) =>\r\n    props.primary &&\r\n    css`\r\n      color: ${(props) => props.color || '#fff'};\r\n      background: ${(props) => props.background || '#fff'};\r\n    `}\r\n  ${(props) =>\r\n    props.outlined &&\r\n    css`\r\n      color: ${(props) => props.color || '#fff'};\r\n      border: 1px solid ${(props) => props.color || '#fff'};\r\n      background: transparent;\r\n    `}\r\n`;\r\n\r\nconst LargeButton = styled(StyledButton)`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return <LargeButton {...props} />;\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Flex, Line } from '.';\r\n\r\nconst StyledConsole = styled.textarea`\r\n  width: 100%;\r\n  height: 70vh;\r\n  background: #000;\r\n  font-size: 24px;\r\n  border: none;\r\n  resize: none;\r\n  color: ${(props) => props.color || props.theme.colors.primary};\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  @media ${(props) => props.theme.media.tablet} {\r\n  }\r\n  @media ${(props) => props.theme.media.phone} {\r\n  }\r\n`;\r\n\r\nconst Console = ({ color, ...props }) => {\r\n  const [lines, setLines] = React.useState(['C:\\\\Windows\\\\System32>']);\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.charCode === 13) {\r\n      setLines((prev) => [...prev, 'C:\\\\Windows\\\\System32>']);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex>\r\n      <Flex direction=\"column\" margin=\"0 10px\">\r\n        {lines.map((line, index) => (\r\n          <Line color={color} key={index}>\r\n            {line}\r\n          </Line>\r\n        ))}\r\n      </Flex>\r\n      <StyledConsole onKeyPress={onKeyPress} color={color} {...props} />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Console;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFlex = styled.div`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  align-items: ${props => props.align || 'strech'};\r\n  justify-content: ${props => props.justify || 'strech'};\r\n  margin: ${({ margin }) => margin || '0'};\r\n`\r\n\r\nconst Flex = (props) => {\r\n  return (\r\n    <StyledFlex {...props} />\r\n  )\r\n}\r\n\r\nexport default Flex\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLine = styled.div`\r\n  font-size: 24px;\r\n  color: ${(props) => props.color || props.theme.colors.primary};\r\n`;\r\n\r\nconst Line = (props) => {\r\n  return <StyledLine {...props} />;\r\n};\r\n\r\nexport default Line;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: ${(props) => props.color || props.theme.colors.primary};\r\n`;\r\n\r\nconst Title = (props) => {\r\n  return <StyledTitle {...props} />;\r\n};\r\n\r\nexport default Title;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button, Console, Flex, Title } from './components';\n\nconst AppWrapper = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  padding: 2rem;\n  background: #000;\n`;\n\nconst App = () => {\n  return (\n    <AppWrapper>\n      <Flex justify=\"center\">\n        <Title>Consoled 2021. With styled-components</Title>\n      </Flex>\n      <Flex direction=\"column\" margin=\"10px 0\">\n        <Console />\n        <Button color=\"green\" align=\"flex-end\">Отправить</Button>\n      </Flex>\n    </AppWrapper>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nconst Global = createGlobalStyle`\n  * {\n    font-family: \"consolas\";\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n\nconst theme = {\n  colors: {\n    primary: 'green',\n    secondary: 'red',\n  },\n  media: {\n    tablet: \"(max-width: 768px) and (min-width: 425px)\",\n    phone: \"(max-width: 425px)\",\n  }\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Global />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}